{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mateo aprende\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LetterButton from './components/LetterButton';\nimport LetterDetail from './components/LetterDetail';\nimport CoverPage from './components/CoverPage';\nimport DonateButton from './components/DonateButton'; // ⬅ botón simplificado\nimport { letras } from './mock/letras';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('cover'); // 'cover', 'menu' o 'detail'\n  const [selectedLetra, setSelectedLetra] = useState(null);\n  const [completedLetters, setCompletedLetters] = useState([]);\n\n  /* ──────────── handlers ──────────── */\n  const handleStart = () => setCurrentPage('menu');\n  const handleLetterClick = letra => {\n    const letraData = letras.find(item => item.letra === letra);\n    setSelectedLetra(letraData);\n    setCurrentPage('detail');\n  };\n  const handleBackToMenu = () => {\n    setCurrentPage('menu');\n    setSelectedLetra(null);\n  };\n  const handleLetterComplete = letra => {\n    if (!completedLetters.includes(letra)) {\n      setCompletedLetters([...completedLetters, letra]);\n    }\n  };\n\n  /* ──────────── UI ──────────── */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen\",\n    children: [currentPage === 'cover' && /*#__PURE__*/_jsxDEV(CoverPage, {\n      onStart: handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }, this), currentPage === 'menu' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-200 min-h-screen p-8 flex flex-wrap justify-center items-center bg-cover bg-center\",\n      style: {\n        backgroundImage: 'url(/image/P2.png)'\n      } // asegúrate de que exista esta imagen\n      ,\n      children: letras.map((letra, idx) => /*#__PURE__*/_jsxDEV(LetterButton, {\n        letra: letra.letra,\n        onClick: handleLetterClick,\n        completed: completedLetters.includes(letra.letra)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), currentPage === 'detail' && selectedLetra && /*#__PURE__*/_jsxDEV(LetterDetail, {\n      letraData: selectedLetra,\n      onBack: handleBackToMenu,\n      onComplete: handleLetterComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), currentPage === 'menu' && /*#__PURE__*/_jsxDEV(DonateButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Op2PAsQNFKMDObUcmS/MRCucEPw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LetterButton","LetterDetail","CoverPage","DonateButton","letras","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","selectedLetra","setSelectedLetra","completedLetters","setCompletedLetters","handleStart","handleLetterClick","letra","letraData","find","item","handleBackToMenu","handleLetterComplete","includes","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","map","idx","onClick","completed","onBack","onComplete","_c","$RefreshReg$"],"sources":["C:/Mateo aprende/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport LetterButton from './components/LetterButton';\nimport LetterDetail from './components/LetterDetail';\nimport CoverPage from './components/CoverPage';\nimport DonateButton from './components/DonateButton';   // ⬅ botón simplificado\nimport { letras } from './mock/letras';\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('cover'); // 'cover', 'menu' o 'detail'\n  const [selectedLetra, setSelectedLetra] = useState(null);\n  const [completedLetters, setCompletedLetters] = useState([]);\n\n  /* ──────────── handlers ──────────── */\n  const handleStart = () => setCurrentPage('menu');\n\n  const handleLetterClick = (letra) => {\n    const letraData = letras.find((item) => item.letra === letra);\n    setSelectedLetra(letraData);\n    setCurrentPage('detail');\n  };\n\n  const handleBackToMenu = () => {\n    setCurrentPage('menu');\n    setSelectedLetra(null);\n  };\n\n  const handleLetterComplete = (letra) => {\n    if (!completedLetters.includes(letra)) {\n      setCompletedLetters([...completedLetters, letra]);\n    }\n  };\n\n  /* ──────────── UI ──────────── */\n  return (\n    <div className=\"min-h-screen\">\n      {/* Portada */}\n      {currentPage === 'cover' && <CoverPage onStart={handleStart} />}\n\n      {/* Menú de letras */}\n      {currentPage === 'menu' && (\n        <div\n          className=\"bg-blue-200 min-h-screen p-8 flex flex-wrap justify-center items-center bg-cover bg-center\"\n          style={{ backgroundImage: 'url(/image/P2.png)' }} // asegúrate de que exista esta imagen\n        >\n          {letras.map((letra, idx) => (\n            <LetterButton\n              key={idx}\n              letra={letra.letra}\n              onClick={handleLetterClick}\n              completed={completedLetters.includes(letra.letra)}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Detalle de letra */}\n      {currentPage === 'detail' && selectedLetra && (\n        <LetterDetail\n          letraData={selectedLetra}\n          onBack={handleBackToMenu}\n          onComplete={handleLetterComplete}\n        />\n      )}\n\n      {/* Botón de donación solo visible en el menú */}\n      {currentPage === 'menu' && <DonateButton />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}